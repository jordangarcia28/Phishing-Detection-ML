{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Neural Networks","provenance":[],"collapsed_sections":[],"mount_file_id":"1VYAqcnROq_R4B6-rHKqwv8KMPU6c1k17","authorship_tag":"ABX9TyPZzki8QuXlCDkLoIyipevq"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"gpuClass":"standard"},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"3fqbLeBcWb9_"},"outputs":[],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import numpy as np"]},{"cell_type":"code","source":["# Import pandas library\n","import pandas as pd\n"," \n","# List of Tuples\n","employees = [('Stuti', 28, 'Varanasi'),\n","            ('Saumya', 32, 'Delhi'),\n","            ('Aaditya', 25, 'Mumbai'),\n","            ('Saumya', 32, 'Delhi'),\n","            ('Saumya', 32, 'Delhi'),\n","            ('Saumya', 32, 'Delhi'),\n","            ('Saumya', 32, 'Delhi'),\n","            ('Saumya', 32, 'Mumbai'),\n","            ('Aaditya', 40, 'Dehradun'),\n","            ('Seema', 32, 'Delhi')\n","            ]\n"," \n","# Creating a DataFrame object\n","df = pd.DataFrame(employees,\n","                  columns = ['Name', 'Age', 'City'])\n"," \n","# Selecting duplicate rows except first\n","# occurrence based on all columns\n","duplicate = df[df.duplicated()]\n"," \n","print(\"Duplicate Rows :\")\n"," \n","# Print the resultant Dataframe\n","duplicate"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":192},"id":"9ndcc5SSksX_","executionInfo":{"status":"ok","timestamp":1656692611624,"user_tz":-420,"elapsed":703,"user":{"displayName":"Wie Hong","userId":"16160120645271386848"}},"outputId":"0027ba5e-8b59-4de7-c5da-ddc8a25d556b"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Duplicate Rows :\n"]},{"output_type":"execute_result","data":{"text/plain":["     Name  Age   City\n","3  Saumya   32  Delhi\n","4  Saumya   32  Delhi\n","5  Saumya   32  Delhi\n","6  Saumya   32  Delhi"],"text/html":["\n","  <div id=\"df-23318c83-1d30-4e21-9b55-d2d03eecb464\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Age</th>\n","      <th>City</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>Saumya</td>\n","      <td>32</td>\n","      <td>Delhi</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Saumya</td>\n","      <td>32</td>\n","      <td>Delhi</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Saumya</td>\n","      <td>32</td>\n","      <td>Delhi</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Saumya</td>\n","      <td>32</td>\n","      <td>Delhi</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-23318c83-1d30-4e21-9b55-d2d03eecb464')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-23318c83-1d30-4e21-9b55-d2d03eecb464 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-23318c83-1d30-4e21-9b55-d2d03eecb464');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":1}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"BBrNgBYIk4yn","executionInfo":{"status":"ok","timestamp":1656692669437,"user_tz":-420,"elapsed":352,"user":{"displayName":"Wie Hong","userId":"16160120645271386848"}},"outputId":"88be2dac-f0ec-4e1a-9018-ea2372360df0"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Name  Age      City\n","0    Stuti   28  Varanasi\n","1   Saumya   32     Delhi\n","2  Aaditya   25    Mumbai\n","3   Saumya   32     Delhi\n","4   Saumya   32     Delhi\n","5   Saumya   32     Delhi\n","6   Saumya   32     Delhi\n","7   Saumya   32    Mumbai\n","8  Aaditya   40  Dehradun\n","9    Seema   32     Delhi"],"text/html":["\n","  <div id=\"df-1eb6566c-ac44-4df2-bf6a-c85410fce187\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Age</th>\n","      <th>City</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Stuti</td>\n","      <td>28</td>\n","      <td>Varanasi</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Saumya</td>\n","      <td>32</td>\n","      <td>Delhi</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Aaditya</td>\n","      <td>25</td>\n","      <td>Mumbai</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Saumya</td>\n","      <td>32</td>\n","      <td>Delhi</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Saumya</td>\n","      <td>32</td>\n","      <td>Delhi</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Saumya</td>\n","      <td>32</td>\n","      <td>Delhi</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Saumya</td>\n","      <td>32</td>\n","      <td>Delhi</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Saumya</td>\n","      <td>32</td>\n","      <td>Mumbai</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Aaditya</td>\n","      <td>40</td>\n","      <td>Dehradun</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Seema</td>\n","      <td>32</td>\n","      <td>Delhi</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1eb6566c-ac44-4df2-bf6a-c85410fce187')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1eb6566c-ac44-4df2-bf6a-c85410fce187 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1eb6566c-ac44-4df2-bf6a-c85410fce187');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["from google.colab import drive\n","\n","pd.set_option('display.max_columns', None)\n","\n","drive.mount('/content/drive')\n","path = \"drive/My Drive/A\"\n","df = pd.read_csv(path+'/dataset_full.csv')\n","df.head()"],"metadata":{"id":"yGWfRIONtXX2","executionInfo":{"status":"ok","timestamp":1656668709535,"user_tz":-420,"elapsed":5683,"user":{"displayName":"Wie Hong","userId":"16160120645271386848"}},"colab":{"base_uri":"https://localhost:8080/","height":288},"outputId":"1e03be7b-e9a3-4882-f742-dc5eb4b33aec"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]},{"output_type":"execute_result","data":{"text/plain":["   qty_dot_url  qty_hyphen_url  qty_underline_url  qty_slash_url  \\\n","0            3               0                  0              1   \n","1            5               0                  1              3   \n","2            2               0                  0              1   \n","3            4               0                  2              5   \n","4            2               0                  0              0   \n","\n","   qty_questionmark_url  qty_equal_url  qty_at_url  qty_and_url  \\\n","0                     0              0           0            0   \n","1                     0              3           0            2   \n","2                     0              0           0            0   \n","3                     0              0           0            0   \n","4                     0              0           0            0   \n","\n","   qty_exclamation_url  qty_space_url  qty_tilde_url  qty_comma_url  \\\n","0                    0              0              0              0   \n","1                    0              0              0              0   \n","2                    0              0              0              0   \n","3                    0              0              0              0   \n","4                    0              0              0              0   \n","\n","   qty_plus_url  qty_asterisk_url  qty_hashtag_url  qty_dollar_url  \\\n","0             0                 0                0               0   \n","1             0                 0                0               0   \n","2             0                 0                0               0   \n","3             0                 0                0               0   \n","4             0                 0                0               0   \n","\n","   qty_percent_url  qty_tld_url  length_url  qty_dot_domain  \\\n","0                0            1          25               2   \n","1                0            3         223               2   \n","2                0            1          15               2   \n","3                0            1          81               2   \n","4                0            1          19               2   \n","\n","   qty_hyphen_domain  qty_underline_domain  qty_slash_domain  \\\n","0                  0                     0                 0   \n","1                  0                     0                 0   \n","2                  0                     0                 0   \n","3                  0                     0                 0   \n","4                  0                     0                 0   \n","\n","   qty_questionmark_domain  qty_equal_domain  qty_at_domain  qty_and_domain  \\\n","0                        0                 0              0               0   \n","1                        0                 0              0               0   \n","2                        0                 0              0               0   \n","3                        0                 0              0               0   \n","4                        0                 0              0               0   \n","\n","   qty_exclamation_domain  qty_space_domain  qty_tilde_domain  \\\n","0                       0                 0                 0   \n","1                       0                 0                 0   \n","2                       0                 0                 0   \n","3                       0                 0                 0   \n","4                       0                 0                 0   \n","\n","   qty_comma_domain  qty_plus_domain  qty_asterisk_domain  qty_hashtag_domain  \\\n","0                 0                0                    0                   0   \n","1                 0                0                    0                   0   \n","2                 0                0                    0                   0   \n","3                 0                0                    0                   0   \n","4                 0                0                    0                   0   \n","\n","   qty_dollar_domain  qty_percent_domain  qty_vowels_domain  domain_length  \\\n","0                  0                   0                  4             17   \n","1                  0                   0                  5             16   \n","2                  0                   0                  3             14   \n","3                  0                   0                  7             19   \n","4                  0                   0                  5             19   \n","\n","   domain_in_ip  server_client_domain  qty_dot_directory  \\\n","0             0                     0                  1   \n","1             0                     0                  3   \n","2             0                     0                  0   \n","3             0                     0                  2   \n","4             0                     0                 -1   \n","\n","   qty_hyphen_directory  qty_underline_directory  qty_slash_directory  \\\n","0                     0                        0                    1   \n","1                     0                        0                    3   \n","2                     0                        0                    1   \n","3                     0                        2                    5   \n","4                    -1                       -1                   -1   \n","\n","   qty_questionmark_directory  qty_equal_directory  qty_at_directory  \\\n","0                           0                    0                 0   \n","1                           0                    0                 0   \n","2                           0                    0                 0   \n","3                           0                    0                 0   \n","4                          -1                   -1                -1   \n","\n","   qty_and_directory  qty_exclamation_directory  qty_space_directory  \\\n","0                  0                          0                    0   \n","1                  0                          0                    0   \n","2                  0                          0                    0   \n","3                  0                          0                    0   \n","4                 -1                         -1                   -1   \n","\n","   qty_tilde_directory  qty_comma_directory  qty_plus_directory  \\\n","0                    0                    0                   0   \n","1                    0                    0                   0   \n","2                    0                    0                   0   \n","3                    0                    0                   0   \n","4                   -1                   -1                  -1   \n","\n","   qty_asterisk_directory  qty_hashtag_directory  qty_dollar_directory  \\\n","0                       0                      0                     0   \n","1                       0                      0                     0   \n","2                       0                      0                     0   \n","3                       0                      0                     0   \n","4                      -1                     -1                    -1   \n","\n","   qty_percent_directory  directory_length  qty_dot_file  qty_hyphen_file  \\\n","0                      0                 8             1                0   \n","1                      0                42             1                0   \n","2                      0                 1             0                0   \n","3                      0                62             1                0   \n","4                     -1                -1            -1               -1   \n","\n","   qty_underline_file  qty_slash_file  qty_questionmark_file  qty_equal_file  \\\n","0                   0               0                      0               0   \n","1                   0               0                      0               0   \n","2                   0               0                      0               0   \n","3                   0               0                      0               0   \n","4                  -1              -1                     -1              -1   \n","\n","   qty_at_file  qty_and_file  qty_exclamation_file  qty_space_file  \\\n","0            0             0                     0               0   \n","1            0             0                     0               0   \n","2            0             0                     0               0   \n","3            0             0                     0               0   \n","4           -1            -1                    -1              -1   \n","\n","   qty_tilde_file  qty_comma_file  qty_plus_file  qty_asterisk_file  \\\n","0               0               0              0                  0   \n","1               0               0              0                  0   \n","2               0               0              0                  0   \n","3               0               0              0                  0   \n","4              -1              -1             -1                 -1   \n","\n","   qty_hashtag_file  qty_dollar_file  qty_percent_file  file_length  \\\n","0                 0                0                 0            7   \n","1                 0                0                 0            9   \n","2                 0                0                 0            0   \n","3                 0                0                 0            9   \n","4                -1               -1                -1           -1   \n","\n","   qty_dot_params  qty_hyphen_params  qty_underline_params  qty_slash_params  \\\n","0              -1                 -1                    -1                -1   \n","1               0                  0                     1                 0   \n","2              -1                 -1                    -1                -1   \n","3              -1                 -1                    -1                -1   \n","4              -1                 -1                    -1                -1   \n","\n","   qty_questionmark_params  qty_equal_params  qty_at_params  qty_and_params  \\\n","0                       -1                -1             -1              -1   \n","1                        0                 3              0               2   \n","2                       -1                -1             -1              -1   \n","3                       -1                -1             -1              -1   \n","4                       -1                -1             -1              -1   \n","\n","   qty_exclamation_params  qty_space_params  qty_tilde_params  \\\n","0                      -1                -1                -1   \n","1                       0                 0                 0   \n","2                      -1                -1                -1   \n","3                      -1                -1                -1   \n","4                      -1                -1                -1   \n","\n","   qty_comma_params  qty_plus_params  qty_asterisk_params  qty_hashtag_params  \\\n","0                -1               -1                   -1                  -1   \n","1                 0                0                    0                   0   \n","2                -1               -1                   -1                  -1   \n","3                -1               -1                   -1                  -1   \n","4                -1               -1                   -1                  -1   \n","\n","   qty_dollar_params  qty_percent_params  params_length  tld_present_params  \\\n","0                 -1                  -1             -1                  -1   \n","1                  0                   0            165                   0   \n","2                 -1                  -1             -1                  -1   \n","3                 -1                  -1             -1                  -1   \n","4                 -1                  -1             -1                  -1   \n","\n","   qty_params  email_in_url  time_response  domain_spf  asn_ip  \\\n","0          -1             0       0.207316           0   60781   \n","1           3             0       0.499566          -1   36024   \n","2          -1             0       0.935901           0    4766   \n","3          -1             0       0.410021           0   20454   \n","4          -1             0       0.410761           0   53831   \n","\n","   time_domain_activation  time_domain_expiration  qty_ip_resolved  \\\n","0                      -1                      -1                1   \n","1                     579                     150                1   \n","2                      -1                      -1                1   \n","3                      -1                      -1                1   \n","4                    6998                     306                1   \n","\n","   qty_nameservers  qty_mx_servers  ttl_hostname  tls_ssl_certificate  \\\n","0                2               0           892                    0   \n","1                2               1          9540                    1   \n","2                2               3           589                    1   \n","3                2               0           292                    1   \n","4                2               1          3597                    0   \n","\n","   qty_redirects  url_google_index  domain_google_index  url_shortened  \\\n","0              0                 0                    0              0   \n","1              0                 0                    0              0   \n","2              0                 0                    0              0   \n","3              0                 0                    0              0   \n","4              1                 0                    0              0   \n","\n","   phishing  \n","0         1  \n","1         1  \n","2         0  \n","3         1  \n","4         0  "],"text/html":["\n","  <div id=\"df-122b031f-917e-47cd-9511-45ea36c35248\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>qty_dot_url</th>\n","      <th>qty_hyphen_url</th>\n","      <th>qty_underline_url</th>\n","      <th>qty_slash_url</th>\n","      <th>qty_questionmark_url</th>\n","      <th>qty_equal_url</th>\n","      <th>qty_at_url</th>\n","      <th>qty_and_url</th>\n","      <th>qty_exclamation_url</th>\n","      <th>qty_space_url</th>\n","      <th>qty_tilde_url</th>\n","      <th>qty_comma_url</th>\n","      <th>qty_plus_url</th>\n","      <th>qty_asterisk_url</th>\n","      <th>qty_hashtag_url</th>\n","      <th>qty_dollar_url</th>\n","      <th>qty_percent_url</th>\n","      <th>qty_tld_url</th>\n","      <th>length_url</th>\n","      <th>qty_dot_domain</th>\n","      <th>qty_hyphen_domain</th>\n","      <th>qty_underline_domain</th>\n","      <th>qty_slash_domain</th>\n","      <th>qty_questionmark_domain</th>\n","      <th>qty_equal_domain</th>\n","      <th>qty_at_domain</th>\n","      <th>qty_and_domain</th>\n","      <th>qty_exclamation_domain</th>\n","      <th>qty_space_domain</th>\n","      <th>qty_tilde_domain</th>\n","      <th>qty_comma_domain</th>\n","      <th>qty_plus_domain</th>\n","      <th>qty_asterisk_domain</th>\n","      <th>qty_hashtag_domain</th>\n","      <th>qty_dollar_domain</th>\n","      <th>qty_percent_domain</th>\n","      <th>qty_vowels_domain</th>\n","      <th>domain_length</th>\n","      <th>domain_in_ip</th>\n","      <th>server_client_domain</th>\n","      <th>qty_dot_directory</th>\n","      <th>qty_hyphen_directory</th>\n","      <th>qty_underline_directory</th>\n","      <th>qty_slash_directory</th>\n","      <th>qty_questionmark_directory</th>\n","      <th>qty_equal_directory</th>\n","      <th>qty_at_directory</th>\n","      <th>qty_and_directory</th>\n","      <th>qty_exclamation_directory</th>\n","      <th>qty_space_directory</th>\n","      <th>qty_tilde_directory</th>\n","      <th>qty_comma_directory</th>\n","      <th>qty_plus_directory</th>\n","      <th>qty_asterisk_directory</th>\n","      <th>qty_hashtag_directory</th>\n","      <th>qty_dollar_directory</th>\n","      <th>qty_percent_directory</th>\n","      <th>directory_length</th>\n","      <th>qty_dot_file</th>\n","      <th>qty_hyphen_file</th>\n","      <th>qty_underline_file</th>\n","      <th>qty_slash_file</th>\n","      <th>qty_questionmark_file</th>\n","      <th>qty_equal_file</th>\n","      <th>qty_at_file</th>\n","      <th>qty_and_file</th>\n","      <th>qty_exclamation_file</th>\n","      <th>qty_space_file</th>\n","      <th>qty_tilde_file</th>\n","      <th>qty_comma_file</th>\n","      <th>qty_plus_file</th>\n","      <th>qty_asterisk_file</th>\n","      <th>qty_hashtag_file</th>\n","      <th>qty_dollar_file</th>\n","      <th>qty_percent_file</th>\n","      <th>file_length</th>\n","      <th>qty_dot_params</th>\n","      <th>qty_hyphen_params</th>\n","      <th>qty_underline_params</th>\n","      <th>qty_slash_params</th>\n","      <th>qty_questionmark_params</th>\n","      <th>qty_equal_params</th>\n","      <th>qty_at_params</th>\n","      <th>qty_and_params</th>\n","      <th>qty_exclamation_params</th>\n","      <th>qty_space_params</th>\n","      <th>qty_tilde_params</th>\n","      <th>qty_comma_params</th>\n","      <th>qty_plus_params</th>\n","      <th>qty_asterisk_params</th>\n","      <th>qty_hashtag_params</th>\n","      <th>qty_dollar_params</th>\n","      <th>qty_percent_params</th>\n","      <th>params_length</th>\n","      <th>tld_present_params</th>\n","      <th>qty_params</th>\n","      <th>email_in_url</th>\n","      <th>time_response</th>\n","      <th>domain_spf</th>\n","      <th>asn_ip</th>\n","      <th>time_domain_activation</th>\n","      <th>time_domain_expiration</th>\n","      <th>qty_ip_resolved</th>\n","      <th>qty_nameservers</th>\n","      <th>qty_mx_servers</th>\n","      <th>ttl_hostname</th>\n","      <th>tls_ssl_certificate</th>\n","      <th>qty_redirects</th>\n","      <th>url_google_index</th>\n","      <th>domain_google_index</th>\n","      <th>url_shortened</th>\n","      <th>phishing</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>25</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>17</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>0.207316</td>\n","      <td>0</td>\n","      <td>60781</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>892</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>223</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>16</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>42</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>165</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0.499566</td>\n","      <td>-1</td>\n","      <td>36024</td>\n","      <td>579</td>\n","      <td>150</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>9540</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>15</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>0.935901</td>\n","      <td>0</td>\n","      <td>4766</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>589</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>81</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>62</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>0.410021</td>\n","      <td>0</td>\n","      <td>20454</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>292</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>19</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>0.410761</td>\n","      <td>0</td>\n","      <td>53831</td>\n","      <td>6998</td>\n","      <td>306</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3597</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-122b031f-917e-47cd-9511-45ea36c35248')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-122b031f-917e-47cd-9511-45ea36c35248 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-122b031f-917e-47cd-9511-45ea36c35248');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["df_b = df"],"metadata":{"id":"wsui04rXgme_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["row_1=df.iloc[0]"],"metadata":{"id":"IuHx53zfKdr8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(row_1)"],"metadata":{"id":"mES3iIK5KiIL","executionInfo":{"status":"ok","timestamp":1656668958373,"user_tz":-420,"elapsed":3,"user":{"displayName":"Wie Hong","userId":"16160120645271386848"}},"outputId":"710c0add-c95d-476f-b7c5-f52147e48bfd","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["qty_dot_url             3.0\n","qty_hyphen_url          0.0\n","qty_underline_url       0.0\n","qty_slash_url           1.0\n","qty_questionmark_url    0.0\n","                       ... \n","qty_redirects           0.0\n","url_google_index        0.0\n","domain_google_index     0.0\n","url_shortened           0.0\n","phishing                1.0\n","Name: 0, Length: 112, dtype: float64\n"]}]},{"cell_type":"code","source":["df_b.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NGUeg7V5g0DI","executionInfo":{"status":"ok","timestamp":1656668719563,"user_tz":-420,"elapsed":2,"user":{"displayName":"Wie Hong","userId":"16160120645271386848"}},"outputId":"6f59b5d9-a159-46cb-e221-1fafd3799e64"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(88647, 112)"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["# looping over row and store in tuples\n","for i in df_b.itertuples():\n","    # count -1 value in tuples\n","    count_1 = i.count(-1)\n","    # if -1 value in tuples greater than 5, then delete row\n","    if count_1 > 10:\n","        df_b = df_b.drop(i[0], axis=0)\n","        # print(\"Removed row \" + str(i[0]))"],"metadata":{"id":"0pVZN38OgmZo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_b.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oSmnTy9ZgsFn","executionInfo":{"status":"ok","timestamp":1656592270863,"user_tz":-420,"elapsed":330,"user":{"displayName":"Wie Hong","userId":"16160120645271386848"}},"outputId":"39f776b3-43ea-4d6c-ff2f-cadc22563c58"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(7416, 112)"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# Split Data\n","\n","X = df.drop(columns=['phishing'])\n","y = df['phishing']\n","\n","# y.isnull().sum()\n","# X.head()\n","\n","print(X.shape)\n","print(y.shape)\n","y.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"60HETQqltfY8","executionInfo":{"status":"ok","timestamp":1656656349475,"user_tz":-420,"elapsed":753,"user":{"displayName":"Wie Hong","userId":"16160120645271386848"}},"outputId":"b80599ad-cb1e-4232-fad7-1637ef2b7018"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(58645, 111)\n","(58645,)\n"]},{"output_type":"execute_result","data":{"text/plain":["0    0\n","1    0\n","2    0\n","3    1\n","4    1\n","Name: phishing, dtype: int64"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["### A"],"metadata":{"id":"HGBaeNFOLXkc"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)"],"metadata":{"id":"V4Bt_I9AzkDY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from tensorflow import keras\n","from tensorflow.keras import layers\n","from keras.layers import Dense\n","from keras.models import Sequential\n","from keras.layers import Flatten\n","from keras.layers import Dropout\n","from keras.layers import Activation"],"metadata":{"id":"Kom9kRsWlocm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model = Sequential()\n","\n","model.add(Dense(units = 32, activation = 'relu', input_dim =111))\n","model.add(Dropout(0.2))\n","model.add(Dense(units = 16, activation = 'relu'))\n","model.add(Dense(units = 1, activation = 'sigmoid'))"],"metadata":{"id":"mJ_kgYzPlng_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics=['accuracy'])"],"metadata":{"id":"TygdNl67l0W2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["keras.optimizers.lr = 0.01"],"metadata":{"id":"gUtme6jGcZr6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["keras.optimizers.lr"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ge11Sz4OcfLK","executionInfo":{"status":"ok","timestamp":1656187571887,"user_tz":-420,"elapsed":3,"user":{"displayName":"Wie Hong","userId":"16160120645271386848"}},"outputId":"53a5e7de-3140-4db0-f235-ae2b26db7674"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.01"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["model.fit(X_train, y_train, batch_size=1, epochs = 5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nGiwd6u9l4sG","executionInfo":{"status":"ok","timestamp":1656189090108,"user_tz":-420,"elapsed":442634,"user":{"displayName":"Wie Hong","userId":"16160120645271386848"}},"outputId":"ba37fdaa-4fea-4d28-990c-fceb0b5fa3ca"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/5\n","41051/41051 [==============================] - 87s 2ms/step - loss: 0.4093 - accuracy: 0.8365\n","Epoch 2/5\n","41051/41051 [==============================] - 80s 2ms/step - loss: 0.4197 - accuracy: 0.8330\n","Epoch 3/5\n","41051/41051 [==============================] - 84s 2ms/step - loss: 0.4225 - accuracy: 0.8354\n","Epoch 4/5\n","41051/41051 [==============================] - 78s 2ms/step - loss: 0.3987 - accuracy: 0.8429\n","Epoch 5/5\n","41051/41051 [==============================] - 82s 2ms/step - loss: 0.4026 - accuracy: 0.8455\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f9d62986310>"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["val_loss, val_acc = model.evaluate(X_test, y_test)\n","print(\"Loss     :\", val_loss)\n","print(\"Accuracy :\", val_acc)"],"metadata":{"id":"0RU4uwFgl64e"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Hyperparameter Tuning"],"metadata":{"id":"InnpRHFW5_Ok"}},{"cell_type":"markdown","source":["##### Keras tuner"],"metadata":{"id":"AvNUQoPtFm0m"}},{"cell_type":"code","source":["!pip install keras-tuner --upgrade"],"metadata":{"id":"RiiHEjY7tGUE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import keras_tuner as kt\n","import tensorflow as tf\n","from tensorflow import keras"],"metadata":{"id":"SU4nTvi-tffc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def build_model(hp):\n","    model = keras.Sequential()\n","    # model.add(keras.layers.Dense(units = 32, activation = 'relu', input_dim =111))\n","    # model.add(keras.layers.Dense(units = 16, activation = 'relu'))\n","    for i in range(hp.Int(\"num_layers\", 1, 3)):\n","        model.add(keras.layers.Dense(hp.Choice('units', [16, 32]),activation='relu'))\n","    if hp.Boolean(\"dropout\"):\n","        model.add(keras.layers.Dropout(rate=0.25))\n","    # model.add(keras.layers.Dropout(0.2))\n","    model.add(keras.layers.Dense(units = 1, activation = 'sigmoid'))\n","    hp_learning_rate = hp.Choice('learning_rate', values=[1e-2, 1e-3, 1e-4])\n","    # hp_learning_rate = 1e-2\n","    model.compile(optimizer=keras.optimizers.Adam(learning_rate=hp_learning_rate),\n","                  loss=keras.losses.BinaryCrossentropy(from_logits=True),\n","                  metrics=['accuracy'])\n","    return model"],"metadata":{"id":"OlfZ24eRtiPU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# tuner = kt.RandomSearch(\n","#     build_model,\n","#     objective='val_accuracy',\n","#     max_trials=10,\n","#     executions_per_trial=2,\n","#     directory='check',\n","#     overwrite=True)\n","\n","tuner = kt.Hyperband(\n","    build_model,\n","    objective='val_accuracy',\n","    max_epochs=10,\n","    factor=3,\n","    directory='check',\n","    overwrite=True)"],"metadata":{"id":"3JNKM4lttmwM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# stop_early = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=10)\n","stop_early = tf.keras.callbacks.EarlyStopping(monitor='val_loss')"],"metadata":{"id":"EXpVjCFjGe8m"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tuner.search(X_train, y_train, epochs=50, validation_data=(X_test, y_test), callbacks=[stop_early])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FBtImYSduUfM","executionInfo":{"status":"ok","timestamp":1656657853394,"user_tz":-420,"elapsed":248611,"user":{"displayName":"Wie Hong","userId":"16160120645271386848"}},"outputId":"13a50c0d-306a-4a92-983e-cec2fd70c256"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Trial 30 Complete [00h 00m 08s]\n","val_accuracy: 0.7624691128730774\n","\n","Best val_accuracy So Far: 0.8299087882041931\n","Total elapsed time: 00h 04m 08s\n","INFO:tensorflow:Oracle triggered exit\n"]},{"output_type":"stream","name":"stderr","text":["INFO:tensorflow:Oracle triggered exit\n"]}]},{"cell_type":"code","source":["best_hps=tuner.get_best_hyperparameters(num_trials=1)[0]\n","print(f\"\"\"\n","The hyperparameter search is complete. \n","The optimal number of units in the first densely-connected layer is,\n","{best_hps.get('units')}\n","the optimal learning rate for the optimizer is,\n","{best_hps.get('learning_rate')}\n","the optimal number of layers for the optimizer is\n","{best_hps.get('num_layers')}\n","the optimal dropouts for the optimizer is,\n","{best_hps.get('dropout')}\n","\"\"\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-depAQg5Xo3p","executionInfo":{"status":"ok","timestamp":1656657858830,"user_tz":-420,"elapsed":582,"user":{"displayName":"Wie Hong","userId":"16160120645271386848"}},"outputId":"72dd4a09-3e63-4918-bd91-5671a39cb815"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","The hyperparameter search is complete. \n","The optimal number of units in the first densely-connected layer is,\n","16\n","the optimal learning rate for the optimizer is,\n","0.001\n","the optimal number of layers for the optimizer is\n","3\n","the optimal dropouts for the optimizer is,\n","False\n","\n"]}]},{"cell_type":"code","source":["tuner.results_summary()"],"metadata":{"id":"Gb37gPV1SWNL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Build the model with the optimal hyperparameters and train it on the data for 50 epochs\n","model = tuner.hypermodel.build(best_hps)\n","history = model.fit(X_train, y_train, epochs=50, validation_data=(X_test, y_test))\n","\n","val_acc_per_epoch = history.history['val_accuracy']\n","best_epoch = val_acc_per_epoch.index(max(val_acc_per_epoch)) + 1\n","print('Best epoch: %d' % (best_epoch,))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uriXEYy_UZQB","executionInfo":{"status":"ok","timestamp":1656658183114,"user_tz":-420,"elapsed":169211,"user":{"displayName":"Wie Hong","userId":"16160120645271386848"}},"outputId":"cd0352f9-3f9c-430c-9ee4-9391c7216706"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/util/dispatch.py:1082: UserWarning: \"`binary_crossentropy` received `from_logits=True`, but the `output` argument was produced by a sigmoid or softmax activation and thus does not represent logits. Was this intended?\"\n","  return dispatch_target(*args, **kwargs)\n"]},{"output_type":"stream","name":"stdout","text":["1452/1467 [============================>.] - ETA: 0s - loss: 5.0338 - accuracy: 0.7052"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/util/dispatch.py:1082: UserWarning: \"`binary_crossentropy` received `from_logits=True`, but the `output` argument was produced by a sigmoid or softmax activation and thus does not represent logits. Was this intended?\"\n","  return dispatch_target(*args, **kwargs)\n"]},{"output_type":"stream","name":"stdout","text":["\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\r1467/1467 [==============================] - 4s 3ms/step - loss: 5.0088 - accuracy: 0.7055 - val_loss: 1.3544 - val_accuracy: 0.7939\n","Epoch 2/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 1.9914 - accuracy: 0.7608 - val_loss: 2.8974 - val_accuracy: 0.7499\n","Epoch 3/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 1.2226 - accuracy: 0.7814 - val_loss: 0.4749 - val_accuracy: 0.8434\n","Epoch 4/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.6247 - accuracy: 0.8095 - val_loss: 0.5039 - val_accuracy: 0.8311\n","Epoch 5/50\n","1467/1467 [==============================] - 4s 2ms/step - loss: 0.4961 - accuracy: 0.8247 - val_loss: 0.4861 - val_accuracy: 0.8426\n","Epoch 6/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.4570 - accuracy: 0.8195 - val_loss: 0.7686 - val_accuracy: 0.7404\n","Epoch 7/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3892 - accuracy: 0.8406 - val_loss: 0.3408 - val_accuracy: 0.8603\n","Epoch 8/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3958 - accuracy: 0.8326 - val_loss: 0.4089 - val_accuracy: 0.8220\n","Epoch 9/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3732 - accuracy: 0.8432 - val_loss: 0.3589 - val_accuracy: 0.8488\n","Epoch 10/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3659 - accuracy: 0.8404 - val_loss: 0.9562 - val_accuracy: 0.6645\n","Epoch 11/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3714 - accuracy: 0.8367 - val_loss: 0.3502 - val_accuracy: 0.8516\n","Epoch 12/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3696 - accuracy: 0.8286 - val_loss: 0.3178 - val_accuracy: 0.8731\n","Epoch 13/50\n","1467/1467 [==============================] - 4s 2ms/step - loss: 0.3587 - accuracy: 0.8417 - val_loss: 0.3952 - val_accuracy: 0.8199\n","Epoch 14/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3518 - accuracy: 0.8463 - val_loss: 0.3185 - val_accuracy: 0.8690\n","Epoch 15/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3378 - accuracy: 0.8542 - val_loss: 0.3216 - val_accuracy: 0.8718\n","Epoch 16/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3329 - accuracy: 0.8557 - val_loss: 0.3157 - val_accuracy: 0.8655\n","Epoch 17/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3360 - accuracy: 0.8529 - val_loss: 0.3140 - val_accuracy: 0.8671\n","Epoch 18/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3289 - accuracy: 0.8581 - val_loss: 0.3261 - val_accuracy: 0.8655\n","Epoch 19/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3250 - accuracy: 0.8570 - val_loss: 0.3226 - val_accuracy: 0.8579\n","Epoch 20/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3241 - accuracy: 0.8604 - val_loss: 0.2998 - val_accuracy: 0.8709\n","Epoch 21/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3190 - accuracy: 0.8635 - val_loss: 0.3404 - val_accuracy: 0.8507\n","Epoch 22/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3247 - accuracy: 0.8596 - val_loss: 0.3236 - val_accuracy: 0.8581\n","Epoch 23/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3081 - accuracy: 0.8665 - val_loss: 0.3026 - val_accuracy: 0.8742\n","Epoch 24/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3108 - accuracy: 0.8648 - val_loss: 0.2857 - val_accuracy: 0.8800\n","Epoch 25/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3085 - accuracy: 0.8673 - val_loss: 0.2853 - val_accuracy: 0.8806\n","Epoch 26/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3083 - accuracy: 0.8678 - val_loss: 0.2966 - val_accuracy: 0.8745\n","Epoch 27/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3003 - accuracy: 0.8702 - val_loss: 0.2801 - val_accuracy: 0.8833\n","Epoch 28/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3024 - accuracy: 0.8709 - val_loss: 0.2866 - val_accuracy: 0.8781\n","Epoch 29/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.2963 - accuracy: 0.8723 - val_loss: 0.2939 - val_accuracy: 0.8749\n","Epoch 30/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.2995 - accuracy: 0.8702 - val_loss: 0.3410 - val_accuracy: 0.8587\n","Epoch 31/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3068 - accuracy: 0.8671 - val_loss: 0.3111 - val_accuracy: 0.8697\n","Epoch 32/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.2950 - accuracy: 0.8744 - val_loss: 0.3140 - val_accuracy: 0.8750\n","Epoch 33/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3035 - accuracy: 0.8711 - val_loss: 0.2903 - val_accuracy: 0.8803\n","Epoch 34/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3086 - accuracy: 0.8694 - val_loss: 0.2982 - val_accuracy: 0.8746\n","Epoch 35/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.2964 - accuracy: 0.8727 - val_loss: 0.2829 - val_accuracy: 0.8834\n","Epoch 36/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3019 - accuracy: 0.8733 - val_loss: 0.2827 - val_accuracy: 0.8798\n","Epoch 37/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3028 - accuracy: 0.8711 - val_loss: 0.3280 - val_accuracy: 0.8762\n","Epoch 38/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.2920 - accuracy: 0.8750 - val_loss: 0.2986 - val_accuracy: 0.8635\n","Epoch 39/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.3005 - accuracy: 0.8718 - val_loss: 0.2956 - val_accuracy: 0.8776\n","Epoch 40/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.2896 - accuracy: 0.8761 - val_loss: 0.2711 - val_accuracy: 0.8922\n","Epoch 41/50\n","1467/1467 [==============================] - 4s 3ms/step - loss: 0.2867 - accuracy: 0.8766 - val_loss: 0.2834 - val_accuracy: 0.8834\n","Epoch 42/50\n","1467/1467 [==============================] - 4s 3ms/step - loss: 0.2897 - accuracy: 0.8749 - val_loss: 0.2940 - val_accuracy: 0.8744\n","Epoch 43/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.2898 - accuracy: 0.8753 - val_loss: 0.2906 - val_accuracy: 0.8765\n","Epoch 44/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.2899 - accuracy: 0.8776 - val_loss: 0.2910 - val_accuracy: 0.8782\n","Epoch 45/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.2834 - accuracy: 0.8796 - val_loss: 0.2693 - val_accuracy: 0.8920\n","Epoch 46/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.2785 - accuracy: 0.8820 - val_loss: 0.2711 - val_accuracy: 0.8924\n","Epoch 47/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.2872 - accuracy: 0.8778 - val_loss: 0.2772 - val_accuracy: 0.8833\n","Epoch 48/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.2847 - accuracy: 0.8807 - val_loss: 0.2806 - val_accuracy: 0.8786\n","Epoch 49/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.2888 - accuracy: 0.8778 - val_loss: 0.2881 - val_accuracy: 0.8815\n","Epoch 50/50\n","1467/1467 [==============================] - 3s 2ms/step - loss: 0.2800 - accuracy: 0.8830 - val_loss: 0.4312 - val_accuracy: 0.8076\n","Best epoch: 46\n"]}]},{"cell_type":"code","source":["test_data = np.array([[2,\n"," 3,\n"," 0,\n"," 5,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 3,\n"," 74,\n"," 2,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 5,\n"," 20,\n"," 0,\n"," 0,\n"," 0,\n"," 1,\n"," 0,\n"," 2,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 26,\n"," 0,\n"," 2,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 19,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0.082035,\n"," 0,\n"," 16509,\n"," 3996,\n"," 1484,\n"," 4,\n"," 4,\n"," 0,\n"," 55,\n"," 1,\n"," 0,\n"," 1,\n"," 1,\n"," 0]])"],"metadata":{"id":"mu3jZEavmXiA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_data = np.array([[1,\n"," 3,\n"," 0,\n"," 5,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 2,\n"," 68,\n"," 1,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 6,\n"," 11,\n"," 0,\n"," 0,\n"," 0,\n"," 3,\n"," 0,\n"," 2,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 48,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 13335,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 1,\n"," 0,\n"," 1,\n"," 1,\n"," 0]])"],"metadata":{"id":"mdLKWrrRrIW2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_data = np.array([[5,\n"," 0,\n"," 0,\n"," 4,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 3,\n"," 62,\n"," 4,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 9,\n"," 34,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 1,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 11,\n"," 1,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 9,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0.575017,\n"," 0,\n"," 36352,\n"," 219,\n"," 147,\n"," 0,\n"," 2,\n"," 0,\n"," 0,\n"," 1,\n"," 0,\n"," 0,\n"," 0,\n"," 0]])"],"metadata":{"id":"cFdY8aAerWNe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# test_pred = model.predict(test_data)\n","# print(\"X=%s, Predicted=%s\" % (test_data[0], test_pred[0]))\n","prediction = model.predict(np.array(test_data), verbose=1)\n","print(prediction)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zBVUw7IXmwFn","executionInfo":{"status":"ok","timestamp":1656662932774,"user_tz":-420,"elapsed":2,"user":{"displayName":"Wie Hong","userId":"16160120645271386848"}},"outputId":"d8aad07f-9ce1-4c5e-bd2c-af8b4b4750ed"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 36ms/step\n","[[0.91768897]]\n"]}]}]}